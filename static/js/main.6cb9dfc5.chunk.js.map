{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Header/Header.module.css","components/Sidebar/Friend/Friend.module.css","components/Dialogs/MessageItem/MessageItem.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Sidebar/Sidebar.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Users/Users.module.css","assets/image/standartPhoto.jpg","components/Navbar/Navbar.module.css","serviceWorker.js","Redux/dialogsPage-reducer.js","Redux/profilePage-reducer.js","Redux/sidebar-reducer.js","Redux/users-reducer.js","Redux/redux-store.js","components/Header/Header.jsx","components/Sidebar/Friend/Friend.jsx","components/Sidebar/Sidebar.jsx","components/Navbar/SidebarContainer.jsx","components/Navbar/Navbar.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/News/News.jsx","components/Musics/Musics.jsx","components/Settings/Settings.jsx","components/Users/Users.jsx","components/Users/UsersContainer.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/MessageItem/MessageItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","initialState","dialogs","id","name","messages","message","newTextMessage","dialogsPageReducer","state","action","type","posts","likesCount","newPostText","profilePageReducer","newPost","length","newText","inintiaState","friends","sidebarPageReducer","users","usersReducer","map","user","userId","followed","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","store","createStore","Header","className","classes","header","headerLogo","src","formGroup","placeholder","search","Friend","props","friend","friendImg","friendUrl","alt","friendName","to","activeClassName","activeLink","Sidebar","friendsUsers","url","friendsBlock","SidebarContainer","connect","dispatch","Navbar","nav","link","ProfileInfo","infoImg","descriptionBlock","Post","item","defaultProps","MyPosts","postsElements","post","value","onChange","e","onNewPostChange","currentTarget","onClick","onNewAddPost","MyPostsContainer","text","upDateNewPostTextActionCreator","Profile","News","Musics","Settings","Users","getUsers","axios","then","response","setUsers","data","items","key","onclick","photos","small","standartPhoto","photoUser","follow","unfollow","status","followAC","unfollowAC","setUsersAC","DialogItem","divStyle","backgroundImage","dialogsBlock","avatarImg","style","userName","MessageItem","classFriend","messagesBlock","userAvatar","userMessage","Dialogs","dialogsElements","dialog","messagesElements","messagesText","React","createRef","dialogsItems","messagesAdd","ref","userText","current","onNewMessageChange","addNewMessage","addMessage","DialogsContainer","upDateNewMessageTextActionCreator","App","path","render","UsersContainer","Component","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6cb9dfc5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3sx_p\",\"dialogsItems\":\"Dialogs_dialogsItems__79h5S\",\"active\":\"Dialogs_active__-eweQ\",\"dialog\":\"Dialogs_dialog__2Uqa_\",\"messages\":\"Dialogs_messages__1GoSX\",\"messagesAdd\":\"Dialogs_messagesAdd__2Sirv\",\"userMessage\":\"Dialogs_userMessage__2kiXc\",\"addMessage\":\"Dialogs_addMessage__6HUkp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__HTLYX\",\"formGroup\":\"Header_formGroup__ic5AR\",\"search\":\"Header_search__JUsZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Friend_friend__3Y2Um\",\"friendImg\":\"Friend_friendImg__YKqmc\",\"friendName\":\"Friend_friendName__2SJO5\",\"activeLink\":\"Friend_activeLink__1svLM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesBlock\":\"MessageItem_messagesBlock__23BT5\",\"userAvatar\":\"MessageItem_userAvatar__3ld28\",\"userMessage\":\"MessageItem_userMessage__1n9pT\",\"friend\":\"MessageItem_friend__ndjRQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsBlock\":\"DialogItem_dialogsBlock__2eYgB\",\"avatarImg\":\"DialogItem_avatarImg__2ETh6\",\"userName\":\"DialogItem_userName__2RBSr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Sidebar_friends__3HoJv\",\"friendsBlock\":\"Sidebar_friendsBlock__3Za-a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3glVk\",\"infoImg\":\"ProfileInfo_infoImg__3jccs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__1zJ0n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3Z0d7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photoUser\":\"Users_photoUser__3Es6b\"};","module.exports = __webpack_public_path__ + \"static/media/standartPhoto.b10e29df.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__C7Bof\",\"item\":\"Navbar_item__37MvM\",\"link\":\"Navbar_link__1ynEc\",\"activeLink\":\"Navbar_activeLink__2sjYn\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const ADD_NEW_MESSAGE = 'ADD-NEW-MESSAGE';\r\nconst UPDATE_NEW_MESSAGE = 'UPDATE-NEW-MESSAGE';\r\n\r\nlet initialState = {\r\n\tdialogs : [\r\n\t\t{id : 1, name: 'Sveta', 'url' : 'https://img2.freepng.ru/20180518/qqw/kisspng-avatar-computer-icons-5aff72c4df41b8.1805380615266905009145.jpg'},\r\n\t\t{id : 2, name: 'Ruslan', 'url' : 'https://im0-tub-ru.yandex.net/i?id=85bcd676262e00d396cd05f4204bfff2&n=33&w=150&h=150'},\r\n\t\t{id : 3, name: 'Slava', 'url' : 'https://retohercules.com/images/face-icon-png-1.png'},\r\n\t\t{id : 4, name: 'Toma', 'url' : 'https://retohercules.com/images/face-icon-png-1.png'},\r\n\t\t{id : 5, name: 'Nika', 'url' : 'https://i.pinimg.com/736x/6f/0c/b0/6f0cb03a78e7f7dbfa81c31b1b45badf--photos-of-animals-animal-portraits.jpg'},\r\n\t\t{id : 6, name: 'Ivan', 'url' : 'https://img2.freepng.ru/20180325/otq/kisspng-beard-silhouette-clip-art-beard-5ab80c52060ec5.1534278815220112180248.jpg'}\r\n\t],\r\n\r\n\tmessages : [\r\n\t\t{id : 0, message: 'Современные технологии достигли такого уровня, что сплочённость команды профессионалов, в своём классическом представлении, допускает внедрение кластеризации усилий. А ещё ключевые особенности структуры проекта будут описаны максимально подробно. Идейные соображения высшего порядка, а также современная методология разработки позволяет выполнить важные задания по разработке поставленных обществом задач.'},\r\n\t\t{id : 1, message: 'Не следует, однако, забывать, что понимание сути ресурсосберегающих технологий, а также свежий взгляд на привычные вещи - безусловно открывает новые горизонты для экспериментов, поражающих по своей масштабности и грандиозности.'},\r\n\t\t{id : 2, message: 'Благородные стремления не спасут: спикеры палаты госдумы негодуют'},\r\n\t\t{id : 3, message: 'Повседневная практика показывает, что синтетическое тестирование требует анализа укрепления моральных ценностей.'},\r\n\t\t{id : 0, message: 'Мы вынуждены отталкиваться от того, что курс на социально-ориентированный национальный проект напрямую зависит от распределения внутренних резервов и ресурсов. Приятно, граждане, наблюдать, как некоторые особенности внутренней политики являются только методом политического участия и ассоциативно распределены по отраслям.'}\r\n\t],\r\n\tnewTextMessage: ''\t\r\n}\r\n\r\nconst dialogsPageReducer = (state = initialState, action) => {\r\n\t// eslint-disable-next-line default-case\r\n\tswitch(action.type){\r\n\t\tcase ADD_NEW_MESSAGE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessages : [...state.messages, {id : 0, message: state.newTextMessage}],\r\n\t\t\t\tnewTextMessage: ''\r\n\t\t\t}\r\n\t\tcase UPDATE_NEW_MESSAGE:\r\n\t\t\treturn {\r\n\t\t\t\t...state, newTextMessage : action.message\r\n\t\t\t}\r\n\t}\r\n\treturn state\r\n}\r\n\r\nexport const messageActionCreator = () => ({ type: 'ADD-NEW-MESSAGE' });\r\n\r\nexport const upDateNewMessageTextActionCreator = (text) => {\r\n\treturn {\r\n\t\ttype: 'UPDATE-NEW-MESSAGE',\r\n\t\tmessage : text\r\n\t}\r\n};\r\n\r\nexport default dialogsPageReducer;","const ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\n\r\nlet initialState = {\r\n\tposts : [\r\n\t\t{id: 1, message: \"Hi, how are you\", likesCount: 10},\r\n\t\t{id: 2, message: \"It's my first post\", likesCount: 25},\r\n\t],\r\n\tnewPostText: 'it-kamasutra.com'\t\t\r\n}\r\n\r\nconst profilePageReducer = (state = initialState, action) => { //принимет state и action\r\n\t// eslint-disable-next-line default-case\r\n\tswitch(action.type){\r\n\t\tcase ADD_POST: \r\n\t\t\tlet newPost = {\r\n\t\t\t\tid: state.posts.length + 1,\r\n\t\t\t\tmessage: state.newPostText,\r\n\t\t\t\tlikesCount: 0\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tposts:[...state.posts, newPost], newPostText:''\r\n\t\t\t}\r\n\r\n\t\tcase UPDATE_NEW_POST_TEXT:{\r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\tnewPostText:action.newText\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\t\r\n\t}\r\n\r\n\treturn state\r\n}\r\n\r\nexport default profilePageReducer;\r\n\r\nexport const postActionCreator = () => ({ type: 'ADD-POST' });\r\n\r\nexport const upDateNewPostTextActionCreator = (text) => {\r\n\treturn {\r\n\t\ttype: 'UPDATE-NEW-POST-TEXT',\r\n\t\tnewText : text\r\n\t}\r\n};","let inintiaState = {\r\n\tfriends : [\r\n\t\t{'friendName' : 'Slava', 'url' : 'https://img2.freepng.ru/20180210/dle/kisspng-cartoon-illustration-cartoon-boy-avatar-no-expression-5a7e7d120190d1.0706177315182389940064.jpg'},\r\n\t\t{'friendName' : 'Ruslan', 'url' : 'https://img2.freepng.ru/20180210/dle/kisspng-cartoon-illustration-cartoon-boy-avatar-no-expression-5a7e7d120190d1.0706177315182389940064.jpg'},\r\n\t\t{'friendName' : 'Vova', 'url' : 'https://img2.freepng.ru/20180210/dle/kisspng-cartoon-illustration-cartoon-boy-avatar-no-expression-5a7e7d120190d1.0706177315182389940064.jpg'},\r\n\t]\t\r\n};\r\n\r\nconst sidebarPageReducer = (state = inintiaState, action) => {\r\n\treturn state;\r\n}\r\n\r\nexport default sidebarPageReducer;","const FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SETUSERS = 'SET_USERS';\r\n\r\nlet initialState = {users : []};\r\n\r\nconst usersReducer = (state = initialState, action) => { //принимет state и action\r\n\t// eslint-disable-next-line default-case\r\n\t\t\tdebugger\r\n\tswitch(action.type){\r\n\r\n\t\tcase FOLLOW :\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers : state.users.map(user => {\r\n\t\t\t\t\tif(user.id === action.userId) return {...user, followed : false}; \r\n\t\t\t\t\treturn user;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\tcase UNFOLLOW :\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers : state.users.map(user => {\r\n\t\t\t\t\tif(user.id === action.userId) return {...user, followed : true};\r\n\t\t\t\t\treturn user;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tcase SETUSERS :\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tusers : [...state.users, ...action.users ]\r\n\t\t\t\t}\t\t\t\r\n\t}\r\n\r\n\treturn state\r\n}\r\n\r\nexport default usersReducer;\r\n\r\nexport const followAC = (userId) => ({ type: 'FOLLOW', userId });\r\n\r\nexport const unfollowAC = (userId) => ({ type: 'UNFOLLOW', userId });\r\n\r\nexport const setUsersAC = (users) => ({ type: 'SET_USERS', users});","import { createStore, combineReducers } from 'redux';\r\nimport dialogsPageReducer from './dialogsPage-reducer';\r\nimport profilePageReducer from './profilePage-reducer';\r\nimport sidebarPageReducer from './sidebar-reducer';\r\nimport usersReducer from './users-reducer';\r\n\r\nlet reducers = combineReducers({\r\n\tprofilePage : profilePageReducer,\r\n\tdialogsPage : dialogsPageReducer,\r\n\tsidebar : sidebarPageReducer,\r\n\tusersPage : usersReducer\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\r\nimport classes from './Header.module.css';\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<header className={classes.header}>\r\n\t\t\t<div className={classes.headerLogo}>\r\n\t\t\t\t<img src=\"http://mythemestore.com/friend-finder/images/logo.png\" />\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.formGroup}>\r\n\t\t\t\t<input type=\"text\" placeholder=\"Search friends, photos, videos\" className={classes.search} />\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport classes from './Friend.module.css';\r\n\r\nconst Friend = (props) => {\r\n\treturn (\r\n\t\t<div className={classes.friend}>\r\n\t\t\t<div className={classes.friendImg}>\r\n\t\t\t\t<img src={props.friendUrl} alt={props.friendName}/>\r\n\t\t\t</div>\r\n\t\t\t<NavLink\r\n\t\t\t\tto={`/${props.friendName}`}\r\n\t\t\t\tclassName={classes.friendName}\r\n\t\t\t\tactiveClassName={classes.activeLink}\r\n\t\t\t>\r\n\t\t\t\t{props.friendName}\r\n\t\t\t</NavLink>\r\n\t\t</div>\t\t\r\n\t);\r\n};\r\n\r\nFriend.propTypes = {\r\n\tfriendUrl : PropTypes.string,\r\n\tfriendName : PropTypes.string\r\n}\r\n\r\nexport default Friend;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classes from './Sidebar.module.css';\r\nimport Friend from './Friend/Friend';\r\n\r\nconst Sidebar = (props) => {\r\n\tlet friendsUsers = props.friends.map(user => <Friend friendUrl={user.url} friendName={user.friendName}/>);\r\n\treturn (\r\n\t\t<aside className={classes.friends}>\r\n\t\t\t<h2>Frends</h2>\r\n\t\t\t<div className={classes.friendsBlock}>\r\n\t\t\t\t{friendsUsers}\r\n\t\t\t</div>\r\n\t\t</aside>\r\n\t)\r\n};\r\n\r\nSidebar.propTypes = {\r\n\tfriends : PropTypes.array\r\n};\r\n\r\nexport default Sidebar;","import Sidebar from './../Sidebar/Sidebar';\r\nimport { connect } from 'react-redux'\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tfriends : state.sidebar.friends\r\n\t}\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {}\r\n}\r\n\r\nlet SidebarContainer = connect(mapStateToProps, mapDispatchToProps)(Sidebar)\r\n\r\n\r\nexport default SidebarContainer;","import React from 'react';\r\nimport classes from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport SidebarContainer from './SidebarContainer';\r\n\r\n\r\nconst Navbar = (props) => {\r\n\r\n\treturn (\r\n\t\t<nav className={classes.nav}>\r\n\t\t\t<NavLink to=\"/profile\" activeClassName={classes.activeLink} className={`${classes.link}`}>Profile</NavLink>\r\n\t\t\t<NavLink to=\"/dialogs\"  activeClassName={classes.activeLink} className={`${classes.link}`}>Dialogs</NavLink>\r\n\t\t\t<NavLink to=\"/news\" activeClassName={classes.activeLink} className={`${classes.link}`}>News</NavLink>\r\n\t\t\t<NavLink to=\"/musics\" activeClassName={classes.activeLink} className={`${classes.link}`}>Musics</NavLink>\r\n\t\t\t<NavLink to=\"/settings\" activeClassName={classes.activeLink} className={`${classes.link}`}>Settings</NavLink>\r\n\t\t\t<SidebarContainer />\r\n\t\t</nav>\r\n\t)\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\n\r\nconst ProfileInfo = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={classes.infoImg}>\r\n\t\t\t\t<img src=\"http://u-f.ru/sites/default/files/styles/main_700/public/uploads/170851.jpg\"/>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.descriptionBlock}>\r\n\t\t\t\tAva + description gg\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\treturn (\r\n\t\t<div className={classes.item}>\r\n\t\t\t<img src=\"https://avatars.mds.yandex.net/get-pdb/912419/34c311bd-5c8b-418c-9d86-960f483e142c/orig\" />\r\n\t\t\t{props.message}\r\n\t\t\t<div>\r\n\t\t\t\t<span>like {props.likesCount}</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nPost.defaultProps = {\r\n\tlikesCount : 0\r\n}\r\n\r\nPost.propTypes = {\r\n\tmessage : PropTypes.string,\r\n\tlikesCount : PropTypes.number\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst MyPosts = (props) => {\r\n\t\r\n\tlet postsElements = props.posts.map(post => {\r\n\t\treturn <Post message={post.message} likesCount={post.likesCount}/>\r\n\t});\r\n\r\n\tlet onAddPost = () => {\r\n\t\tprops.onNewAddPost();\r\n\t};\r\n\r\n\tlet onPostChange = (e) => {\r\n\t\tprops.onNewPostChange(e.currentTarget.value);\r\n\t};\r\n\tdebugger\r\n\treturn (\r\n\t\t\r\n\t\t<div className={classes.posts}>\r\n\t\t\tMyPost\r\n\t\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tvalue={props.newPostText}\r\n\t\t\t\t\t\tonChange={onPostChange}>\r\n\t\t\t\t\t</textarea>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button onClick={ onAddPost }>Add post</button>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.posts}>\r\n\t\t\t\t{postsElements}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nMyPosts.defaultProps = {\r\n\tnewPostText : ''\r\n}\r\n\r\nMyPosts.propTypes = {\r\n\taddPost : PropTypes.func,\r\n\tupdateNewPostText : PropTypes.func,\r\n\tposts : PropTypes.array,\r\n\tnewPostText : PropTypes.string\r\n}\r\n\r\nexport default MyPosts;","import {postActionCreator, upDateNewPostTextActionCreator} from '../../../Redux/profilePage-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux'\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n\treturn {\r\n\t\tposts : state.profilePage.posts,\r\n\t\tnewPostText : state.profilePage.newPostText\r\n\t}\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tonNewAddPost : () => {\r\n\t\t\tdispatch(postActionCreator());\r\n\t\t},\r\n\t\tonNewPostChange : (text) => {\r\n\t\t\tdispatch(upDateNewPostTextActionCreator(text));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nlet MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ProfileInfo />\r\n\t\t\t<MyPostsContainer />\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nProfile.propTypes = {\r\n\tstate : PropTypes.object,\r\n\taddPost : PropTypes.func,\r\n\tupdateNewPostText : PropTypes.func\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport classes from './News.module.css';\r\n\r\nconst News = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tNews\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport classes from './Musics.module.css';\r\n\r\nconst Musics = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tMusics\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Musics;","import React from 'react';\r\nimport classes from './Settings.module.css';\r\n\r\nconst Settings = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tSettings\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport classes from './Users.module.css'\r\nimport * as axios from 'axios';\r\nimport standartPhoto from './../../assets/image/standartPhoto.jpg';\r\n\r\nlet Users = props => {\r\n\r\n\tlet getUsers = () =>{\r\n\t\tif(props.users.length === 0){\r\n\t\t\taxios.get('https://social-network.samuraijs.com/api/1.0/users')\r\n\t\t\t\t.then(response => {\r\n\t\t\t\t\tprops.setUsers(response.data.items);\r\n\t\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<button onClick={getUsers}>Get User</button>\r\n\t\t\t{\r\n\t\t\t\tprops.users.map(user => {\r\n\t\t\t\t\treturn <div key={user.id}>\r\n\t\t\t\t\t\t<button onclick={getUsers}>Get Users</button>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<img src={(user.photos.small === null)\r\n\t\t\t\t\t\t\t\t? standartPhoto\r\n\t\t\t\t\t\t\t\t: user.photos.small\r\n\t\t\t\t\t\t\t} className={classes.photoUser}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t{user.followed\r\n\t\t\t\t\t\t\t\t? <button onClick={() => props.follow(user.id)}>UnFollow</button>\r\n\t\t\t\t\t\t\t\t: <button onClick={() => props.unfollow(user.id)}>Follow</button>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div>{user.name}</div>\r\n\t\t\t\t\t\t\t<div>{user.status}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div>{'user.location.country'}</div>\r\n\t\t\t\t\t\t\t<div>{'user.location.city'}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\r\n\t)\r\n}\r\n\r\nexport default Users;","import Users from './Users';\r\nimport { connect } from 'react-redux'\r\nimport {followAC, unfollowAC, setUsersAC} from './..//../Redux/users-reducer'\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tusers : state.usersPage.users\r\n\t}\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\tdebugger\r\n\treturn {\r\n\t\tfollow: (userId) => {\r\n\t\t\tdispatch(followAC(userId))\r\n\t\t},\r\n\t\tunfollow: (userId) => {\r\n\t\t\tdispatch(unfollowAC(userId))\r\n\t\t},\r\n\t\tsetUsers: (users) => {\r\n\t\t\tdispatch(setUsersAC(users))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default connect (mapStateToProps, mapDispatchToProps)(Users);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classes from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n\tconst divStyle = {\r\n\t\tbackgroundImage: 'url(' + props.url + ')',\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.dialogsBlock}>\r\n\t\t\t<div className={classes.avatarImg} style={divStyle}></div>\r\n\t\t\t<NavLink to={`/dialogs/${props.id}`} className={classes.userName}>{props.name}</NavLink>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nDialogItem.propTypes = {\r\n\tname : PropTypes.string.isRequired,\r\n\tid : PropTypes.number.isRequired,\r\n\turl : PropTypes.string.isRequired\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classes from './MessageItem.module.css';\r\n\r\nconst MessageItem = (props) => {\r\n\tlet classFriend = (props.id !== 0) ? classes.friend : null;\r\n\treturn (\r\n\t\t<div className={classes.messagesBlock}>\r\n\t\t\t<div className={classes.userAvatar}></div>\r\n\t\t\t<div className={classes.userMessage + ' ' + classFriend}>\r\n\t\t\t\t<p>{props.message}</p>\t\t\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nMessageItem.propTypes = {\r\n\tid : PropTypes.number.isRequired,\r\n\tmessage : PropTypes.string,\r\n};\r\n\r\nexport default MessageItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport MessageItem from './MessageItem/MessageItem';\r\n\r\nconst Dialogs = (props) => {\r\n\tdebugger\r\n\tlet dialogsElements = props.dialogs.map(dialog => <DialogItem name={dialog.name} id={dialog.id} url={dialog.url} />);\r\n\tlet messagesElements = props.messages.map(message => <MessageItem message={message.message} id={message.id}/>);\r\n\t\r\n\tlet messagesText = React.createRef();\r\n\r\n\tlet addMessage = () => {\r\n\t\tprops.addNewMessage();\r\n\t};\r\n\r\n\tlet onMessageChange = () => {\r\n\t\tlet userText = messagesText.current.value;\r\n\t\tprops.onNewMessageChange(userText);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.dialogs}>\r\n\t\t\t<div className={classes.dialogsItems}>\r\n\t\t\t\t<h3>Dialogs</h3>\r\n\t\t\t\t{dialogsElements}\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.messages}>\r\n\t\t\t\t<h3>Messages</h3>\r\n\t\t\t\t{messagesElements}\r\n\t\t\t\t<div className={classes.messagesAdd}>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tref={messagesText}\r\n\t\t\t\t\t\tclassName={classes.userMessage}\r\n\t\t\t\t\t\tplaceholder=\"Введите сообщение\"\r\n\t\t\t\t\t\tvalue={props.newTextMessage}\r\n\t\t\t\t\t\tonChange={onMessageChange}/>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick = {addMessage}\r\n\t\t\t\t\t\tclassName = {classes.addMessage}>\r\n\t\t\t\t\t\tДобавить\r\n\t\t\t\t\t</button> \r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nDialogs.propTypes = {\r\n\tstate : PropTypes.object,\r\n\taddMessage : PropTypes.func,\r\n\tupdateNewMessage : PropTypes.func\r\n}\r\n\r\n\r\nexport default Dialogs;","import Dialogs from './Dialogs';\r\nimport {messageActionCreator, upDateNewMessageTextActionCreator} from './..//../Redux/dialogsPage-reducer'\r\nimport { connect } from 'react-redux'\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tdialogs : state.dialogsPage.dialogs,\r\n\t\tmessages : state.dialogsPage.messages,\r\n\t\tnewTextMessage : state.dialogsPage.newTextMessage\r\n\t}\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddNewMessage : () => {\r\n\t\t\tdispatch(messageActionCreator());\r\n\t\t},\r\n\t\tonNewMessageChange : (text) => {\r\n\t\t\tdispatch(upDateNewMessageTextActionCreator(text));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nlet DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer;","import React from 'react';\nimport './App.css';\nimport {Route} from \"react-router-dom\";\nimport Header from \"./components/Header/Header\";\nimport Navbar from './components/Navbar/Navbar';\nimport Profile from './components/Profile/Profile';\nimport News from './components/News/News';\nimport Musics from './components/Musics/Musics';\nimport Settings from './components/Settings/Settings';\nimport UsersContainer from './components/Users/UsersContainer';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\n\n\nclass  App extends React.Component {\n\trender(){\n\n\t\treturn (\n\t\t\t<div className=\"app-wrapper\">\n\t\t\t\t<Header />\n\t\t\t\t<Navbar/>\n\t\t\t\t<div className ='app-wrapper-content'>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath={'/profile'}\n\t\t\t\t\t\trender={ () => <Profile/>}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath={'/dialogs'}\n\t\t\t\t\t\trender={ () => <DialogsContainer/> }\n\t\t\t\t\t/>\n\t\t\t\t\t<Route path={'/news'} render={ () => <News /> }/>\n\t\t\t\t\t<Route path={'/musics'} render={ () => <Musics /> }/>\n\t\t\t\t\t<Route path={'/settings'} render={ () => <Settings /> }/>\n\t\t\t\t\t<Route path={'/users'} render={ () => <UsersContainer /> }/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\nexport default App;\n","import './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport store from './Redux/redux-store';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<Provider store = {store}>\n\t\t\t<App/>\n\t\t</Provider>\n\t</BrowserRouter>,\n\tdocument.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}