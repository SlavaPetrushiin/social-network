{"version":3,"sources":["assets/image/standartPhoto.jpg","components/Profile/MyPosts/Post/Post.module.css","components/Navbar/Navbar.module.css","serviceWorker.js","Redux/dialogsPage-reducer.js","api/api.js","Redux/profilePage-reducer.js","Redux/sidebar-reducer.js","Redux/users-reducer.js","Redux/auth-reducer.js","Redux/redux-store.js","components/Sidebar/Friend/Friend.jsx","components/Sidebar/Sidebar.jsx","components/Navbar/SidebarContainer.jsx","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Musics/Musics.jsx","components/Settings/Settings.jsx","components/Users/Users.jsx","components/common/Preloader/Preloader.jsx","hoc/withAuthRedirect.js","components/Users/UsersContainer.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/MessageItem/MessageItem.jsx","components/common/FormsControls/FormControls.jsx","utils/ValidationForms/validation.js","components/Dialogs/MessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/AddPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/LoginForm.jsx","components/Login/Login.jsx","App.js","index.js","components/Dialogs/Dialogs.module.css","components/Header/Header.module.css","components/Sidebar/Friend/Friend.module.css","components/Users/Users.module.css","components/Dialogs/MessageItem/MessageItem.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Sidebar/Sidebar.module.css","components/common/FormsControls/FormControls.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","initialState","dialogs","id","name","messages","message","dialogsPageReducer","state","action","type","newMessageBody","instance","axios","withCredentials","baseURL","headers","usersUPI","page","pageSize","get","then","response","data","userId","delete","post","profileUPI","newStatus","put","status","authIP","email","password","rememberMe","ADD_POST","posts","likesCount","profile","setUserStatus","profilePageReducer","newPost","length","newPostText","inintiaState","friends","sidebarPageReducer","users","totalCount","sizePage","isPreloader","setUsers","isLoader","bulLoader","usersReducer","map","user","followed","Number","login","isAuth","setUserData","payload","getAuthMe","dispatch","resultCode","authReduser","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","auth","form","formReducer","store","createStore","applyMiddleware","thunk","Friend","props","className","classes","friend","friendImg","src","friendUrl","alt","friendName","to","activeClassName","activeLink","Sidebar","friendsUsers","index","url","key","friendsBlock","SidebarContainer","connect","Navbar","nav","link","News","Musics","Settings","Users","usersPages","Math","ceil","this","paginationUsers","i","push","onClick","handleClickPageUsers","pageUser","active","photos","small","standartPhoto","photoUser","unfollow","follow","React","Component","Preloader","mapStateToPropsForRedirect","withAuthRedirect","RedirectComponent","UsersAPI","e","currentTarget","innerText","getNewPageUsersThank","getUsersThunkCreator","compose","unfollowSucces","catch","err","console","log","followSucces","newPage","items","DialogItem","divStyle","backgroundImage","dialogsBlock","avatarImg","style","userName","MessageItem","classFriend","messagesBlock","userAvatar","userMessage","FormControl","input","meta","touched","error","hasError","styles","formControl","children","Textarea","restProps","Input","required","value","undefined","maxLengthCreator","maxLen","maxLength250","reduxForm","handleSubmit","onSubmit","messagesAdd","Field","component","validate","placeholder","addMessage","Dialogs","dialogsElements","dialog","messagesElements","dialogsItems","newMessageText","newMessage","addNewMessage","messageActionCreator","ProfileStatus","addedMode","activeEditMode","setState","handleChange","deactivationEditMode","putProfileUserStatus","nextProp","onChange","autoFocus","onBlur","onDoubleClick","ShowUserProfile","avatar","blockUserPhoto","fullName","aboutMe","ProfileInfo","descriptionBlock","Post","item","defaultProps","maxLength30","MyPosts","postsElements","onNewAddPost","MyPostsContainer","postActionCreator","Profile","ProfileContainer","params","getProfileUser","getUserStatus","withRouter","Header","header","headerLogo","formGroup","search","loginBlock","deleteAuthLogout","HeaderContainer","LoginForm","LoginReduxForm","postAuthLogin","App","path","render","DialogsContainer","UsersContainer","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.137e3aad.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/standartPhoto.b10e29df.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3Z0d7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__C7Bof\",\"item\":\"Navbar_item__37MvM\",\"link\":\"Navbar_link__1ynEc\",\"activeLink\":\"Navbar_activeLink__2sjYn\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const ADD_NEW_MESSAGE = 'ADD-NEW-MESSAGE';\r\n\r\nlet initialState = {\r\n\tdialogs : [\r\n\t\t{id : 1, name: 'Sveta', 'url' : 'https://img2.freepng.ru/20180518/qqw/kisspng-avatar-computer-icons-5aff72c4df41b8.1805380615266905009145.jpg'},\r\n\t\t{id : 2, name: 'Ruslan', 'url' : 'https://im0-tub-ru.yandex.net/i?id=85bcd676262e00d396cd05f4204bfff2&n=33&w=150&h=150'},\r\n\t\t{id : 3, name: 'Slava', 'url' : 'https://retohercules.com/images/face-icon-png-1.png'},\r\n\t\t{id : 4, name: 'Toma', 'url' : 'https://retohercules.com/images/face-icon-png-1.png'},\r\n\t\t{id : 5, name: 'Nika', 'url' : 'https://i.pinimg.com/736x/6f/0c/b0/6f0cb03a78e7f7dbfa81c31b1b45badf--photos-of-animals-animal-portraits.jpg'},\r\n\t\t{id : 6, name: 'Ivan', 'url' : 'https://img2.freepng.ru/20180325/otq/kisspng-beard-silhouette-clip-art-beard-5ab80c52060ec5.1534278815220112180248.jpg'}\r\n\t],\r\n\r\n\tmessages : [\r\n\t\t{id : 0, message: 'Современные технологии достигли такого уровня, что сплочённость команды профессионалов, в своём классическом представлении, допускает внедрение кластеризации усилий. А ещё ключевые особенности структуры проекта будут описаны максимально подробно. Идейные соображения высшего порядка, а также современная методология разработки позволяет выполнить важные задания по разработке поставленных обществом задач.'},\r\n\t\t{id : 1, message: 'Не следует, однако, забывать, что понимание сути ресурсосберегающих технологий, а также свежий взгляд на привычные вещи - безусловно открывает новые горизонты для экспериментов, поражающих по своей масштабности и грандиозности.'},\r\n\t\t{id : 2, message: 'Благородные стремления не спасут: спикеры палаты госдумы негодуют'},\r\n\t\t{id : 3, message: 'Повседневная практика показывает, что синтетическое тестирование требует анализа укрепления моральных ценностей.'},\r\n\t\t{id : 0, message: 'Мы вынуждены отталкиваться от того, что курс на социально-ориентированный национальный проект напрямую зависит от распределения внутренних резервов и ресурсов. Приятно, граждане, наблюдать, как некоторые особенности внутренней политики являются только методом политического участия и ассоциативно распределены по отраслям.'}\r\n\t],\r\n}\r\n\r\nconst dialogsPageReducer = (state = initialState, action) => {\r\n\tswitch(action.type){\r\n\t\tcase ADD_NEW_MESSAGE:\r\n\t\t\tdebugger\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessages : [...state.messages, {id : 0, message: action.newMessageBody}],\r\n\t\t\t}\r\n\t\tdefault :\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport const messageActionCreator = (newMessageBody) => ({ type: 'ADD-NEW-MESSAGE', newMessageBody });\r\n\r\nexport default dialogsPageReducer;","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n\twithCredentials : true,\r\n\tbaseURL : 'https://social-network.samuraijs.com/api/1.0/',\r\n\theaders : {\r\n\t\t'API-KEY' : 'c42da93b-73d1-47c9-9b91-cb5950b4c7d5'\r\n\t}\r\n});\r\n\r\n\r\nexport const usersUPI = {\r\n\tgetUsers(page = 1, pageSize = 10) {\r\n\t\treturn instance.get(`users?count=${pageSize}&page=${page}`)\r\n\t\t\t.then(response => response.data)\r\n\t},\r\n\tunFollow(userId){\r\n\t\treturn instance.delete(`follow/${userId}`)\r\n\t\t\t.then(response => response.data)\r\n\t},\r\n\tfollow(userId){\r\n\t\treturn instance.post(`follow/${userId}`)\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn response.data})\r\n\t}\r\n};\r\n\r\nexport const profileUPI = {\r\n\tgetProfileUser(userId){\r\n\t\treturn instance.get(`profile/${userId}`);\r\n\t},\r\n\tgetProfileUserStatus(userId){\r\n\t\treturn instance.get(`profile/status/${userId}`);\r\n\t},\r\n\tputProfileUserStatus(newStatus){\r\n\t\treturn instance.put(`profile/status/`, {status : newStatus});\r\n\t},\r\n\r\n};\r\n\r\nexport const authIP = {\r\n\tgetAuthMe() { //авторизация\r\n\t\treturn instance.get(`auth/me`)\r\n\t\t\t.then(response => response.data);\r\n\t},\r\n\tpostAuthLogin(email, password, rememberMe = false){\r\n\t\treturn instance.post('auth/login', {email, password, rememberMe});\r\n\t},\r\n\tdeleteAuthLogout(){\r\n\t\treturn instance.delete('auth/login');\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import {profileUPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ProfilePage/ADD-POST';\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\r\nconst SET_USER_STATUS = 'SET-USER-STATUS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: \"Hi, how are you\", likesCount: 10},\r\n        {id: 2, message: \"It's my first post\", likesCount: 25},\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n}\r\n\r\nconst profilePageReducer = (state = initialState, action) => { //принимет state и action\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: state.posts.length + 1,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            }\r\n\r\n        case SET_USER_PROFILE :\r\n            return {\r\n                ...state, profile: action.profile\r\n            }\r\n        case SET_USER_STATUS :\r\n            return {\r\n                ...state, status: action.status\r\n            }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const postActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\n\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\n\r\nexport const setUserStatus = (status) => ({type: SET_USER_STATUS, status});\r\n\r\n\r\n//thunk\r\nexport const getProfileUser = (userId) => (dispatch) => {\r\n    profileUPI.getProfileUser(userId).then(response => {\r\n        dispatch(setUserProfile(response.data));\r\n    });\r\n}\r\n\r\nexport const getUserStatus = (userId) => (dispatch) => {\r\n    profileUPI.getProfileUserStatus(userId).then(response => {\r\n        dispatch(setUserStatus(response.data));\r\n    });\r\n}\r\n\r\nexport const putProfileUserStatus = (newStatus) => (dispatch) => {\r\n    profileUPI.putProfileUserStatus(newStatus).then(response => {\r\n\t    debugger\r\n        dispatch(setUserStatus(newStatus));\r\n\t});\r\n}\r\n\r\n\r\nexport default profilePageReducer;\r\n\r\n","let inintiaState = {\r\n\tfriends : [\r\n\t\t{'friendName' : 'Slava', 'url' : 'https://img2.freepng.ru/20180210/dle/kisspng-cartoon-illustration-cartoon-boy-avatar-no-expression-5a7e7d120190d1.0706177315182389940064.jpg'},\r\n\t\t{'friendName' : 'Ruslan', 'url' : 'https://img2.freepng.ru/20180210/dle/kisspng-cartoon-illustration-cartoon-boy-avatar-no-expression-5a7e7d120190d1.0706177315182389940064.jpg'},\r\n\t\t{'friendName' : 'Vova', 'url' : 'https://img2.freepng.ru/20180210/dle/kisspng-cartoon-illustration-cartoon-boy-avatar-no-expression-5a7e7d120190d1.0706177315182389940064.jpg'},\r\n\t]\t\r\n};\r\n\r\nconst sidebarPageReducer = (state = inintiaState, action) => {\r\n\treturn state;\r\n}\r\n\r\nexport default sidebarPageReducer;","import {usersUPI} from \"../api/api\";\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SETUSERS = 'SET_USERS';\r\nconst CHANGE_PAGE_USERS = 'CHANGE_PAGE_USERS';\r\nconst CHANGE_IS_LOADER = 'CHANGE_IS_LOADER';\r\n\r\nlet initialState = {\r\n\tusers : [],\r\n\ttotalCount : 0,\r\n\tsizePage : 40,\r\n\tpage : 1,\r\n\tisPreloader : false \r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => { //принимет state и action\r\n\t// eslint-disable-next-line default-case\r\n\tswitch(action.type){\r\n\t\tcase FOLLOW :\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers : state.users.map(user => {\r\n\t\t\t\t\tif(user.id === action.userId) return {...user, followed : false}; \r\n\t\t\t\t\treturn user;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\tcase UNFOLLOW :\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers : state.users.map(user => {\r\n\t\t\t\t\tif(user.id === action.userId) return {...user, followed : true};\r\n\t\t\t\t\treturn user;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\tcase SETUSERS :\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers : action.users,\r\n\t\t\t\ttotalCount : action.totalCount\r\n\t\t\t}\r\n\t\tcase CHANGE_PAGE_USERS :\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpage : Number(action.page)\r\n\t\t\t}\r\n\t\tcase CHANGE_IS_LOADER :\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisPreloader : action.bulLoader\r\n\t\t\t}\t\t\t\r\n\t\tdefault : \r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport const followSucces = (userId) => ({ type: FOLLOW, userId });\r\n\r\nexport const unfollowSucces = (userId) => ({ type: UNFOLLOW, userId });\r\n\r\nexport const setUsers = (users, totalCount) => ({ type: SETUSERS, users, totalCount});\r\n\r\nexport const newPage = (page) => ({ type: CHANGE_PAGE_USERS, page });\r\n\r\nexport const isLoader = (bulLoader) => ({ type: CHANGE_IS_LOADER, bulLoader });\r\n\r\n//thunks\r\nexport const getUsersThunkCreator = (page, sizePage) => {\r\n\treturn (dispatch) => {\r\n\t\tdispatch(isLoader(true)) // Запускаю прелодер\r\n\t\tusersUPI.getUsers(page, sizePage).then(response => {\r\n\t\t\tdispatch(isLoader(false)) // Отменяю запуск прелодер\r\n\t\t\tdispatch(setUsers(response.items, response.totalCount));\r\n\t\t})\r\n\t}\r\n};\r\n\r\n//Санка по клику на новую страницу\r\nexport const getNewPageUsersThank = (page, sizePage) => (dispatch) => {\r\n\tdispatch(isLoader(true)) // Запускаю прелодер\r\n\tdispatch(newPage(page));\r\n\tusersUPI.getUsers(page, sizePage).then(response => {\r\n\t\tdispatch(isLoader(false)) // Отменяю запуск прелодер\r\n\t\tdispatch(setUsers(response.items, response.totalCount));\r\n\t})\r\n};\r\n\r\nexport const follow = (userId) => (dispatch) => {\r\n\tusersUPI.follow(userId)\r\n\t\t.then(response => {\r\n\t\t\tif(response.resultCode === 0){\r\n\t\t\t\tdispatch(unfollowSucces(userId))\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tconsole.log(err)\r\n\t\t})\r\n};\r\n\r\nexport const unfollow = (userId) => (dispatch) => {\r\n\tusersUPI.unFollow(userId)\r\n\t\t.then(response => {\r\n\t\t\tif(response.resultCode === 0){\r\n\t\t\t\tdispatch(followSucces(userId));\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tconsole.log(err)\r\n\t\t})\r\n}\r\n\r\n\r\nexport default usersReducer;","import {authIP, usersUPI} from \"../api/api\";\r\n\r\nconst SET_USER_DATA = 'SET-USER-DATA';\r\n\r\n//Изначальное незалогиненое состояние\r\nlet initialState = {\r\n\tid: null,\r\n\temail: null,\r\n\tlogin: null,\r\n\tisAuth : false\r\n}\r\n\r\nconst authReduser = (state = initialState, action) => {\r\n\tswitch(action.type){\r\n\t\tcase SET_USER_DATA:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action.payload\r\n\t\t\t}\r\n\t\tdefault :\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport const setUserData = (id, email, login, isAuth) => {\r\n\treturn {\r\n\t\ttype: SET_USER_DATA,\r\n\t\tpayload : {\r\n\t\t\tid, email, login, isAuth\r\n\t\t}\r\n\t}\r\n};\r\n\r\n//thunk\r\nexport const getAuthMe = () => (dispatch) => {\r\n\tauthIP.getAuthMe()\r\n\t\t.then(response => {\r\n\t\t\tif(response.resultCode === 0){\r\n\t\t\t\tlet {id, email, login} = response.data;\r\n\t\t\t\tdispatch(setUserData(id, email, login, true))\r\n\t\t\t} else {\r\n\t\t\t\tdispatch(setUserData(null, null, null, false))\r\n\t\t\t}\r\n\t\t})\r\n}\r\n\r\n//Логин\r\nexport const postAuthLogin = (email, password, rememberMe) => (dispatch) => {\r\n\tauthIP.postAuthLogin(email, password, rememberMe)\r\n\t\t.then(response => {\r\n\t\t\tif(response.data.resultCode === 0){\r\n\t\t\t\tdispatch(getAuthMe()) //При положительном ответе диспатчу санку из header\r\n\t\t\t}\r\n\t\t})\r\n}\r\n\r\n//Вылогинизация\r\nexport const deleteAuthLogout = () => (dispatch) => {\r\n\tdebugger\r\n\tauthIP.deleteAuthLogout()\r\n\t\t.then(response => {\r\n\t\t\tif(response.data.resultCode === 0){\r\n\t\t\t\tdispatch(getAuthMe()) //При положительном ответе диспатчу санку из header\r\n\t\t\t}\r\n\t\t})\r\n}\r\n\r\nexport default authReduser;","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport dialogsPageReducer from './dialogsPage-reducer';\r\nimport profilePageReducer from './profilePage-reducer';\r\nimport sidebarPageReducer from './sidebar-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReduser from './auth-reducer';\r\nimport thunk from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nlet reducers = combineReducers({\r\n\tprofilePage : profilePageReducer,\r\n\tdialogsPage : dialogsPageReducer,\r\n\tsidebar : sidebarPageReducer,\r\n\tusersPage : usersReducer,\r\n\tauth : authReduser,\r\n\tform: formReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nwindow.store = store\r\n\r\nexport default store;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport classes from './Friend.module.css';\r\n\r\nconst Friend = (props) => {\r\n\treturn (\r\n\t\t<div className={classes.friend}>\r\n\t\t\t<div className={classes.friendImg}>\r\n\t\t\t\t<img src={props.friendUrl} alt={props.friendName}/>\r\n\t\t\t</div>\r\n\t\t\t<NavLink\r\n\t\t\t\tto={`/${props.friendName}`}\r\n\t\t\t\tclassName={classes.friendName}\r\n\t\t\t\tactiveClassName={classes.activeLink}\r\n\t\t\t>\r\n\t\t\t\t{props.friendName}\r\n\t\t\t</NavLink>\r\n\t\t</div>\t\t\r\n\t);\r\n};\r\n\r\nFriend.propTypes = {\r\n\tfriendUrl : PropTypes.string,\r\n\tfriendName : PropTypes.string\r\n}\r\n\r\nexport default Friend;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classes from './Sidebar.module.css';\r\nimport Friend from './Friend/Friend';\r\n\r\nconst Sidebar = (props) => {\r\n\tlet friendsUsers = props.friends.map((user, index) => <Friend friendUrl={user.url} friendName={user.friendName} key={index}/>);\r\n\treturn (\r\n\t\t<aside className={classes.friends}>\r\n\t\t\t<h2>Frends</h2>\r\n\t\t\t<div className={classes.friendsBlock}>\r\n\t\t\t\t{friendsUsers}\r\n\t\t\t</div>\r\n\t\t</aside>\r\n\t)\r\n};\r\n\r\nSidebar.propTypes = {\r\n\tfriends : PropTypes.array\r\n};\r\n\r\nexport default Sidebar;","import Sidebar from './../Sidebar/Sidebar';\r\nimport { connect } from 'react-redux'\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tfriends : state.sidebar.friends\r\n\t}\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {}\r\n}\r\n\r\nlet SidebarContainer = connect(mapStateToProps, mapDispatchToProps)(Sidebar)\r\n\r\n\r\nexport default SidebarContainer;","import React from 'react';\r\nimport classes from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport SidebarContainer from './SidebarContainer';\r\n\r\n\r\nconst Navbar = (props) => {\r\n\r\n\treturn (\r\n\t\t<nav className={classes.nav}>\r\n\t\t\t<NavLink to=\"/profile\" activeClassName={classes.activeLink} className={`${classes.link}`}>Profile</NavLink>\r\n\t\t\t<NavLink to=\"/dialogs\"  activeClassName={classes.activeLink} className={`${classes.link}`}>Dialogs</NavLink>\r\n\t\t\t<NavLink to=\"/users\" activeClassName={classes.activeLink} className={`${classes.link}`}>Users</NavLink>\r\n\t\t\t<NavLink to=\"/news\" activeClassName={classes.activeLink} className={`${classes.link}`}>News</NavLink>\r\n\t\t\t<NavLink to=\"/musics\" activeClassName={classes.activeLink} className={`${classes.link}`}>Musics</NavLink>\r\n\t\t\t<NavLink to=\"/settings\" activeClassName={classes.activeLink} className={`${classes.link}`}>Settings</NavLink>\r\n\t\t\t<SidebarContainer />\r\n\t\t</nav>\r\n\t)\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\n/* import classes from './News.module.css'; */\r\n\r\nconst News = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tNews\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default News;","import React from 'react';\r\n/* import classes from './Musics.module.css'; */\r\n\r\nconst Musics = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tMusics\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Musics;","import React from 'react';\r\n/* import classes from './Settings.module.css'; */\r\n\r\nconst Settings = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tSettings\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport classes from './Users.module.css'\r\nimport standartPhoto from './../../assets/image/standartPhoto.jpg';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass Users extends React.Component {\r\n\trender(){\r\n\t\tlet usersPages = Math.ceil(this.props.totalCount / this.props.sizePage);\r\n\t\tlet paginationUsers = [];\r\n\r\n\t\tfor (let i = 1; i <= usersPages; i++){\r\n\t\t\tif(this.props.page === i) {\r\n\t\t\t\tpaginationUsers.push(<span onClick={this.props.handleClickPageUsers} key={i} className={`${classes.pageUser} ${classes.active}`}>{i}</span>)\r\n\t\t\t} else {\r\n\t\t\t\tpaginationUsers.push(<span onClick={this.props.handleClickPageUsers} key={i} className={`${classes.pageUser}`}>{i}</span>)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>{paginationUsers}</div>\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.props.users.map(user => {\r\n\t\t\t\t\t\treturn <div key={user.id}>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<NavLink to={'/profile/' + user.id}>\r\n\t\t\t\t\t\t\t\t\t<img src={(user.photos.small === null)\r\n\t\t\t\t\t\t\t\t\t\t? standartPhoto\r\n\t\t\t\t\t\t\t\t\t\t: user.photos.small\r\n\t\t\t\t\t\t\t\t\t} className={classes.photoUser} alt={\"userPhoto\"}/>\r\n\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t{user.followed\r\n\t\t\t\t\t\t\t\t\t? <button onClick={() => {this.props.unfollow(user.id)}}>UnFollow</button> //функция thunk для кнопки\r\n\t\t\t\t\t\t\t\t\t: <button onClick={() => {this.props.follow(user.id)}}>Follow</button>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<div>{user.name}</div>\r\n\t\t\t\t\t\t\t\t<div>{user.status}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<div>{'user.location.country'}</div>\r\n\t\t\t\t\t\t\t\t<div>{'user.location.city'}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\t\t\r\n\t}\r\n\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport './Preloader.css';\r\n\r\nconst Preloader = (props) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"lds-ripple\"><div></div><div></div></div>\r\n\t\t</>\r\n\t)\r\n};\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) =>  {\r\n    return {\r\n        isAuth : state.auth.isAuth\r\n    };\r\n};\r\n\r\nexport const withAuthRedirect = ( Component ) => {\r\n    class RedirectComponent extends React.Component{\r\n        render() {\r\n            if(this.props.isAuth === false) return <Redirect to=\"/login\"/> //Если не авторизован, то на страницу Login\r\n            return <Component {...this.props} />\r\n        }\r\n    };\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};","import React from 'react';\r\nimport Users from './Users';\r\nimport { connect } from 'react-redux'\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport {follow, getNewPageUsersThank, getUsersThunkCreator, unfollow} from \"../../Redux/users-reducer\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass UsersAPI extends React.Component{\r\n\tcomponentDidMount(){\r\n\t\tconst { page, sizePage } = this.props //деструктурирую значения\r\n\t\tthis.props.getUsersThunkCreator(page, sizePage); //thunk\r\n\t}\r\n\r\n\thandleClickPageUsers = (e) => {\r\n\t\tlet page = e.currentTarget.innerText;\r\n\t\tconst { sizePage } = this.props;\r\n\t\tthis.props.getNewPageUsersThank(page, sizePage);\r\n\t}\r\n\r\n\trender(){\r\n\t\tlet isPreloader = this.props.isPreloader;\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{\r\n\t\t\t\t\t(isPreloader)\r\n\t\t\t\t\t\t? <Preloader />\r\n\t\t\t\t\t\t: <Users {...this.props} handleClickPageUsers={this.handleClickPageUsers}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tusers : state.usersPage.users,\r\n\t\ttotalCount : state.usersPage.totalCount,\r\n\t\tsizePage : state.usersPage.sizePage,\r\n\t\tpage : state.usersPage.page,\r\n\t\tisPreloader : state.usersPage.isPreloader\r\n\t}\r\n}\r\n\r\nexport default compose(withAuthRedirect,\r\n\tconnect(mapStateToProps, {\r\n\t\tfollow,\r\n\t\tunfollow,\r\n\t\tgetNewPageUsersThank,\r\n\t\tgetUsersThunkCreator\r\n\t}))(UsersAPI)","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classes from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n\tconst divStyle = {\r\n\t\tbackgroundImage: 'url(' + props.url + ')',\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.dialogsBlock}>\r\n\t\t\t<div className={classes.avatarImg} style={divStyle}></div>\r\n\t\t\t<NavLink to={`/dialogs/${props.id}`} className={classes.userName}>{props.name}</NavLink>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nDialogItem.propTypes = {\r\n\tname : PropTypes.string.isRequired,\r\n\tid : PropTypes.number.isRequired,\r\n\turl : PropTypes.string.isRequired\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classes from './MessageItem.module.css';\r\n\r\nconst MessageItem = (props) => {\r\n\tlet classFriend = (props.id !== 0) ? classes.friend : null;\r\n\treturn (\r\n\t\t<div className={classes.messagesBlock}>\r\n\t\t\t<div className={classes.userAvatar}></div>\r\n\t\t\t<div className={classes.userMessage + ' ' + classFriend}>\r\n\t\t\t\t<p>{props.message}</p>\t\t\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nMessageItem.propTypes = {\r\n\tid : PropTypes.number.isRequired,\r\n\tmessage : PropTypes.string,\r\n};\r\n\r\nexport default MessageItem;","import React from \"react\";\r\nimport styles from \"./FormControls.module.css\"\r\n\r\nconst  FormControl = ({input, meta, ...props}) => {\r\n    let {touched, error} = meta;\r\n    let hasError =  touched && error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <p>\r\n                {props.children}\r\n            </p>\r\n            <p>\r\n                { hasError && <span>{error}</span> }\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}>\r\n        <textarea  {...input} {...restProps} />\r\n    </FormControl>\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}>\r\n        <input  {...input} {...restProps} />\r\n    </FormControl>\r\n};","export const required = (value) => {\r\n    return (!value) ? 'Field is Required!' : undefined;\r\n};\r\n\r\nexport const maxLengthCreator = (maxLen) => (value) => {\r\n    return (value && value.length > maxLen) ? `Must be ${maxLen} characters or less` : undefined;\r\n }","import React, {Component} from 'react';\r\nimport classes from \"./Dialogs.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/ValidationForms/validation\";\r\n\r\nconst maxLength250 = maxLengthCreator(250);\r\n\r\nlet AddMessageForm = (props) => {\r\n    const {handleSubmit} = props;\r\n    return (\r\n        <form onSubmit={handleSubmit} className={classes.messagesAdd}>\r\n\t\t\t<Field\r\n\t\t\t\tcomponent={Textarea}\r\n                validate={[required, maxLength250]}\r\n\t\t\t\tname=\"newMessageBody\"\r\n                className={classes.userMessage}\r\n                placeholder=\"Введите сообщение\"\r\n            />\r\n            <button className={classes.addMessage}>\r\n                Добавить\r\n            </button>\r\n        </form>\r\n    );\r\n\r\n}\r\n\r\nexport default reduxForm({\r\n\tform : 'dialogAddMessageForm'\r\n})(AddMessageForm);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport MessageItem from './MessageItem/MessageItem';\r\nimport AddMessageForm from \"./MessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\tlet dialogsElements = props.dialogs.map(dialog => <DialogItem name={dialog.name} id={dialog.id} url={dialog.url} />);\r\n\tlet messagesElements = props.messages.map(message => <MessageItem message={message.message} id={message.id}/>);\r\n\t\r\n\tlet addMessage = (newMessageText) => {\r\n\t\tdebugger\r\n\t\tlet newMessage = newMessageText.newMessageBody;\r\n\t\tprops.addNewMessage(newMessage);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={classes.dialogs}>\r\n\t\t\t<div className={classes.dialogsItems}>\r\n\t\t\t\t<h3>Dialogs</h3>\r\n\t\t\t\t{dialogsElements}\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.messages}>\r\n\t\t\t\t<h3>Messages</h3>\r\n\t\t\t\t{messagesElements}\r\n\t\t\t\t<AddMessageForm onSubmit={addMessage}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nDialogs.propTypes = {\r\n\tstate : PropTypes.object,\r\n\taddMessage : PropTypes.func,\r\n\tupdateNewMessage : PropTypes.func\r\n}\r\n\r\n\r\nexport default Dialogs;","import React, { Component }  from 'react';\r\nimport Dialogs from './Dialogs';\r\nimport {messageActionCreator} from './..//../Redux/dialogsPage-reducer'\r\nimport { connect } from 'react-redux'\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tdialogs : state.dialogsPage.dialogs,\r\n\t\tmessages : state.dialogsPage.messages,\r\n\t}\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddNewMessage : (newMessageBody) => {\r\n\t\t\tdispatch(messageActionCreator(newMessageBody));\r\n\t\t}\r\n\t}\r\n};\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, mapDispatchToProps),\r\n\twithAuthRedirect\r\n)(Dialogs);;","import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        addedMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activeEditMode = () => {\r\n        this.setState({addedMode: true});\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({status : e.currentTarget.value})\r\n    };\r\n\r\n    deactivationEditMode = () => {\r\n        this.setState({addedMode: false});\r\n        this.props.putProfileUserStatus(this.state.status);\r\n    };\r\n\r\n    componentWillReceiveProps(nextProp) {\r\n        let status = this.props.status;\r\n        if(status !== nextProp.status){\r\n            this.setState({status: nextProp.status})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.addedMode\r\n                    ? <input onChange={this.handleChange} autoFocus={true} onBlur={this.deactivationEditMode} type=\"text\" value={this.state.status}/>\r\n                    : <span onDoubleClick={this.activeEditMode}>{this.props.status}</span>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\nfunction ShowUserProfile(props){\r\n\tlet avatar = props.profile.photos ? <img src={props.profile.photos.small} alt='User_avatar'/> : <p>1111</p>\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<div className={classes.blockUserPhoto}>\r\n\t\t\t\t{avatar}\r\n\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{props.profile.fullName}</h2>\r\n\t\t\t\t<p>{props.profile.aboutMe}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst ProfileInfo = (props) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={classes.descriptionBlock}>\r\n\t\t\t\t{/*{!props.profile\r\n\t\t\t\t\t? <Preloader />\r\n\t\t\t\t\t: showUserProfile(props.profile)\r\n\t\t\t\t}*/}\r\n\t\t\t\t{props.profile ? <ShowUserProfile profile={props.profile}/> : <p>loading</p>}\r\n\t\t\t\t\r\n\t\t\t\t<ProfileStatus status={props.status} putProfileUserStatus={props.putProfileUserStatus}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\treturn (\r\n\t\t<div className={classes.item}>\r\n\t\t\t<img src=\"https://avatars.mds.yandex.net/get-pdb/912419/34c311bd-5c8b-418c-9d86-960f483e142c/orig\" alt=\"User_photo\"/>\r\n\t\t\t{props.message}\r\n\t\t\t<div>\r\n\t\t\t\t<span>like {props.likesCount}</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nPost.defaultProps = {\r\n\tlikesCount : 0\r\n}\r\n\r\nPost.propTypes = {\r\n\tmessage : PropTypes.string,\r\n\tlikesCount : PropTypes.number\r\n}\r\n\r\nexport default Post;","import React, {Component} from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/ValidationForms/validation\";\r\nimport {Textarea} from \"../../common/FormsControls/FormControls\";\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nlet AddPostForm = (props) => {\r\n    let {handleSubmit} = props;\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    name='newPostText'\r\n                    placeholder=\"Add new post text\"\r\n                    validate={[required, maxLength30]}\r\n                />\r\n            </div>\r\n            <button>Add post</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'newPostText'\r\n})(AddPostForm);","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport AddPostForm from \"./AddPostForm\";\r\n\r\nconst MyPosts = (props) => {\r\n\t\r\n\tlet postsElements = props.posts.map((post, i) => {\r\n\t\treturn <Post message={post.message} likesCount={post.likesCount} key={i}/>\r\n\t});\r\n\r\n\tlet onAddPost = (value) => {\r\n\t\tlet newPostText = value.newPostText;\r\n\t\tprops.onNewAddPost(newPostText);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={classes.posts}>\r\n\t\t\tMyPost\r\n\t\t\t<div>\r\n\t\t\t\t<AddPostForm onSubmit={onAddPost} /> //Добавление формы для поста\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.posts}>\r\n\t\t\t\t{postsElements}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MyPosts;","import {postActionCreator} from '../../../Redux/profilePage-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux'\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n\treturn {\r\n\t\tposts : state.profilePage.posts,\r\n\t}\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tonNewAddPost : (newPostText) => {\r\n\t\t\tdispatch(postActionCreator(newPostText));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nlet MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n\tconst {profile, status, putProfileUserStatus} = props;\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ProfileInfo profile={profile} putProfileUserStatus={putProfileUserStatus} status={status}/>\r\n\t\t\t<MyPostsContainer />\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nProfile.propTypes = {\r\n\tstate : PropTypes.object,\r\n\taddPost : PropTypes.func,\r\n\tupdateNewPostText : PropTypes.func\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux'\r\nimport { withRouter} from 'react-router-dom';\r\nimport {getProfileUser, getUserStatus, putProfileUserStatus} from \"../../Redux/profilePage-reducer\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component{\r\n\tcomponentDidMount(){\r\n\t\tlet userId = this.props.match.params.userId;\r\n\t\tif (!userId) userId = 2;\r\n\t\tthis.props.getProfileUser(userId); //функция по запросу профиля thunk\r\n\t\tthis.props.getUserStatus(userId);\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Profile {...this.props} profile={this.props.profile}/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n};\r\n\r\nlet mapStateToProps = (state) =>  {\r\n\treturn {\r\n\t\tprofile : state.profilePage.profile,\r\n\t\tstatus : state.profilePage.status,\r\n\t}\r\n};\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, {getProfileUser, getUserStatus, putProfileUserStatus}),\r\n\twithRouter,\r\n\t// withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n","import React from 'react';\r\nimport classes from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n\tlet {isAuth, login} = props;\r\n\treturn (\r\n\t\t<header className={classes.header}>\r\n\t\t\t<div className={classes.headerLogo}>\r\n\t\t\t\t<img src=\"http://mythemestore.com/friend-finder/images/logo.png\" alt=\"logo\"/>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.formGroup}>\r\n\t\t\t\t<input type=\"text\" placeholder=\"Search friends, photos, videos\" className={classes.search} />\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.loginBlock}>\r\n\t\t\t\t{\r\n\t\t\t\t\t(isAuth)\r\n\t\t\t\t\t\t? <span>{login}<button onClick={props.deleteAuthLogout}> Logout </button></span>\r\n\t\t\t\t\t\t: <NavLink to=\"/login\">Login</NavLink>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport Header from './Header';\r\nimport {deleteAuthLogout, getAuthMe} from \"../../Redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component{\r\n\tcomponentDidMount(){\r\n\t\tthis.props.getAuthMe(); //функция thunk\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<Header {...this.props}/>\r\n\t\t) \r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tisAuth : state.auth.isAuth,\r\n\t\tlogin : state.auth.login,\r\n\t}\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tgetAuthMe : () => {\r\n\t\t\tdispatch(getAuthMe())\r\n\t\t},\r\n\t\tdeleteAuthLogout : () => {\r\n\t\t\tdispatch(deleteAuthLogout())\r\n\t\t}\r\n\t}\r\n};\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer);","import React, {Component} from 'react';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport {Input} from \"../common/FormsControls/FormControls\";\r\nimport {required} from \"../../utils/ValidationForms/validation\";\r\n\r\nclass LoginForm extends Component {\r\n    render() {\r\n        const {handleSubmit} = this.props;\r\n        return (\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Field\r\n                        type='email'\r\n                        component={Input}\r\n                        validate={[required]}\r\n                        name='email'\r\n                        placeholder='email'/>\r\n                </div>\r\n                <div>\r\n                    <Field\r\n                        type='password'\r\n                        component={Input}\r\n                        validate={[required]}\r\n                        name='password'\r\n                        placeholder='password'/>\r\n                </div>\r\n                <div>\r\n                    <Field\r\n                        type='checkbox'\r\n                        component='input'\r\n                        validate={[required]}\r\n                        name='rememberMe'\r\n                    />\r\n                    Remember Me\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">Login</button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form : 'login'\r\n})(LoginForm);\r\n\r\nexport default LoginReduxForm;","import React from 'react';\r\nimport LoginForm from \"./LoginForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {postAuthLogin} from \"../../Redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n    let onSubmit = (value) => {\r\n        let {email, password, rememberMe} = value;\r\n        props.postAuthLogin(email, password, rememberMe);\r\n    }\r\n\r\n    if(props.isAuth) return  <Redirect to={'/profile'}/>\r\n\r\n    return (\r\n        <div>\r\n            <h2>Login</h2>\r\n            <LoginForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth : state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {postAuthLogin})(Login);","import React from 'react';\nimport './App.css';\nimport {Route} from \"react-router-dom\";\nimport Navbar from './components/Navbar/Navbar';\nimport News from './components/News/News';\nimport Musics from './components/Musics/Musics';\nimport Settings from './components/Settings/Settings';\nimport UsersContainer from './components/Users/UsersContainer';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from \"./components/Login/Login\";\n\n\nclass  App extends React.Component {\n\trender(){\n\n\t\treturn (\n\t\t\t<div className=\"app-wrapper\">\n\t\t\t\t<HeaderContainer />\n\t\t\t\t<Navbar/>\n\t\t\t\t<div className ='app-wrapper-content'>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath={'/profile/:userId?'}\n\t\t\t\t\t\trender={ () => <ProfileContainer/>}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath={'/dialogs'}\n\t\t\t\t\t\trender={ () => <DialogsContainer/> }\n\t\t\t\t\t/>\n\t\t\t\t\t<Route path={'/news'} render={ () => <News /> }/>\n\t\t\t\t\t<Route path={'/musics'} render={ () => <Musics /> }/>\n\t\t\t\t\t<Route path={'/settings'} render={ () => <Settings /> }/>\n\t\t\t\t\t<Route path={'/users'} render={ () => <UsersContainer /> }/>\n\t\t\t\t\t<Route path={'/login'} render = {() => <Login />} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\nexport default App;\n","import './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport store from './Redux/redux-store';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<Provider store = {store}>\n\t\t\t<App/>\n\t\t</Provider>\n\t</BrowserRouter>,\n\tdocument.getElementById('root')\n);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3sx_p\",\"dialogsItems\":\"Dialogs_dialogsItems__79h5S\",\"active\":\"Dialogs_active__-eweQ\",\"dialog\":\"Dialogs_dialog__2Uqa_\",\"messages\":\"Dialogs_messages__1GoSX\",\"messagesAdd\":\"Dialogs_messagesAdd__2Sirv\",\"userMessage\":\"Dialogs_userMessage__2kiXc\",\"addMessage\":\"Dialogs_addMessage__6HUkp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__HTLYX\",\"formGroup\":\"Header_formGroup__ic5AR\",\"search\":\"Header_search__JUsZJ\",\"loginBlock\":\"Header_loginBlock__iTDBx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Friend_friend__3Y2Um\",\"friendImg\":\"Friend_friendImg__YKqmc\",\"friendName\":\"Friend_friendName__2SJO5\",\"activeLink\":\"Friend_activeLink__1svLM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photoUser\":\"Users_photoUser__3Es6b\",\"pageUser\":\"Users_pageUser__gFCI_\",\"active\":\"Users_active__sC7tK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesBlock\":\"MessageItem_messagesBlock__23BT5\",\"userAvatar\":\"MessageItem_userAvatar__3ld28\",\"userMessage\":\"MessageItem_userMessage__1n9pT\",\"friend\":\"MessageItem_friend__ndjRQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsBlock\":\"DialogItem_dialogsBlock__2eYgB\",\"avatarImg\":\"DialogItem_avatarImg__2ETh6\",\"userName\":\"DialogItem_userName__2RBSr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Sidebar_friends__3HoJv\",\"friendsBlock\":\"Sidebar_friendsBlock__3Za-a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__3H9E6\",\"error\":\"FormControls_error__2LrYZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3glVk\",\"infoImg\":\"ProfileInfo_infoImg__3jccs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__1zJ0n\"};"],"sourceRoot":""}